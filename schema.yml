openapi: 3.0.3
info:
  title: PlanA / Opaline API
  version: 0.1.0
  description: API for PlanA / Opaline
paths:
  /associations/:
    get:
      operationId: associations_list
      description: Lists all associations with many filters.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Association acronym.
      - in: query
        name: activity_field
        schema:
          type: integer
        description: Filter by Activity Field ID.
      - in: query
        name: institution_component
        schema:
          type: integer
        description: Filter by Institution Component ID.
      - in: query
        name: institutions
        schema:
          type: integer
        description: Filter by Institution ID.
      - in: query
        name: is_enabled
        schema:
          type: boolean
        description: Filter for non-validated associations.
      - in: query
        name: is_public
        schema:
          type: boolean
        description: Filter for associations shown in the public list.
      - in: query
        name: is_site
        schema:
          type: boolean
        description: Filter for associations from site.
      - in: query
        name: name
        schema:
          type: string
        description: Association name.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter by User ID.
      tags:
      - associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssociationPartialData'
          description: ''
    post:
      operationId: associations_create
      description: Creates a new association with mandatory informations (manager
        only).
      tags:
      - associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssociationMandatoryDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssociationMandatoryDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssociationMandatoryDataRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationMandatoryData'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /associations/{id}:
    get:
      operationId: associations_retrieve
      description: Retrieves an association with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataRead'
          description: ''
        '403':
          description: No response body
        '404':
          description: No response body
    patch:
      operationId: associations_partial_update
      description: Updates association details (president and manager only, restricted
        fields for president).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssociationAllDataUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssociationAllDataUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssociationAllDataUpdateRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataUpdate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
        '415':
          description: No response body
        '500':
          description: No response body
    delete:
      operationId: associations_destroy
      description: Destroys an entire association (manager only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataUpdate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /associations/activity_fields:
    get:
      operationId: associations_activity_fields_list
      description: Lists all activity fields that can be linked to an association.
      tags:
      - associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityField'
          description: ''
  /associations/names:
    get:
      operationId: associations_names_list
      description: Lists minimal details for all associations with many filters.
      parameters:
      - in: query
        name: allow_new_users
        schema:
          type: boolean
        description: Filter for associations where registration is possible.
      - in: query
        name: institutions
        schema:
          type: string
        description: Filter by Institutions IDs.
      - in: query
        name: is_public
        schema:
          type: boolean
        description: Filter for associations shown in the public list.
      tags:
      - associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssociationName'
          description: ''
  /commissions/:
    get:
      operationId: commissions_list
      description: Lists all commission types.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Commission acronym.
      tags:
      - commissions
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Commission'
          description: ''
  /commissions/commission_dates:
    get:
      operationId: commissions_commission_dates_list
      description: Lists all commission dates.
      parameters:
      - in: query
        name: active_projects
        schema:
          type: boolean
        description: Filter to get commission_dates where projects reviews are still
          pending.
      - in: query
        name: only_next
        schema:
          type: boolean
        description: Filter to get only chronologically first commission of each type
      tags:
      - commissions
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionDate'
          description: ''
  /contents/:
    get:
      operationId: contents_list
      description: Lists all contents.
      parameters:
      - in: query
        name: code
        schema:
          type: string
        description: Content code.
      tags:
      - contents
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Content'
          description: ''
  /contents/{id}:
    get:
      operationId: contents_retrieve
      description: Retrieves a content.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contents
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
        '404':
          description: No response body
    patch:
      operationId: contents_partial_update
      description: Updates content details (manager only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContentBodyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContentBodyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContentBodyRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentBody'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /documents/:
    get:
      operationId: documents_list
      description: Lists all documents types.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Document acronym.
      - in: query
        name: process_type
        schema:
          type: string
        description: Document process type.
      tags:
      - documents
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: ''
    post:
      operationId: documents_create
      description: Creates a new document type (manager only).
      tags:
      - documents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
  /documents/{id}:
    get:
      operationId: documents_retrieve
      description: Retrieves a document type with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '404':
          description: No response body
    patch:
      operationId: documents_partial_update
      description: /documents/{id} route
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: documents_destroy
      description: Destroys an entire document type (manager only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /documents/uploads:
    get:
      operationId: documents_uploads_list
      description: Lists all documents uploads.
      parameters:
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: project_id
        schema:
          type: integer
        description: Filter by Project ID.
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter by User ID.
      tags:
      - documents/uploads
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentUpload'
          description: ''
        '401':
          description: No response body
    post:
      operationId: documents_uploads_create
      description: Creates a new document upload.
      tags:
      - documents/uploads
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentUploadCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUploadCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadCreateRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadCreate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
        '415':
          description: No response body
  /documents/uploads/{id}:
    get:
      operationId: documents_uploads_retrieve
      description: Retrieves a document uploaded by a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents/uploads
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpload'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: documents_uploads_destroy
      description: Destroys an uploaded document.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents/uploads
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpload'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /documents/uploads/{id}/file:
    get:
      operationId: documents_uploads_file_retrieve
      description: Retrieves a document uploaded by a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents/uploads
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadFile'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /groups/:
    get:
      operationId: groups_list
      description: Lists all groups.
      parameters:
      - in: query
        name: name
        schema:
          type: string
        description: Group name.
      tags:
      - groups
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
  /institutions/:
    get:
      operationId: institutions_list
      description: Lists all institutions.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Institution acronym.
      tags:
      - institutions
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
          description: ''
  /institutions/institution_components:
    get:
      operationId: institutions_institution_components_list
      description: Lists all institution components.
      tags:
      - institutions
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionComponent'
          description: ''
  /projects/:
    get:
      operationId: projects_list
      description: Lists all projects linked to a user, or all projects with all their
        details (manager).
      parameters:
      - in: query
        name: active_projects
        schema:
          type: boolean
        description: Filter to get projects where reviews are still pending.
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: commission_dates
        schema:
          type: string
        description: Filter by Commission Dates linked to a project.
      - in: query
        name: project_statuses
        schema:
          type: string
        description: Filter by Project Statuses codes.
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter by User ID.
      tags:
      - projects
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPartialData'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: projects_create
      description: Creates a new project.
      tags:
      - projects
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{id}:
    get:
      operationId: projects_retrieve
      description: Retrieves a project with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    patch:
      operationId: projects_partial_update
      description: Updates project details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{id}/restricted:
    patch:
      operationId: projects_restricted_partial_update
      description: Updates project restricted details (manager only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRestrictedRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRestrictedRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRestrictedRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRestricted'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/categories:
    get:
      operationId: projects_categories_retrieve
      description: Retrieves all categories linked to a project.
      parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/categories
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/categories/{category_id}:
    delete:
      operationId: projects_categories_destroy
      description: Destroys a link between project and category.
      parameters:
      - in: path
        name: category_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/categories
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/commission_dates:
    get:
      operationId: projects_commission_dates_retrieve
      description: Retrieves all commission dates linked to a project.
      parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/commission_dates
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionDate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/commission_dates/{commission_date_id}:
    patch:
      operationId: projects_commission_dates_partial_update
      description: Updates details of a project linked to a commission date.
      parameters:
      - in: path
        name: commission_date_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/commission_dates
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommissionDateDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommissionDateDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommissionDateDataRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionDateData'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: projects_commission_dates_destroy
      description: Destroys details of a project linked to a commission date.
      parameters:
      - in: path
        name: commission_date_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/commission_dates
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionDateData'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/categories:
    get:
      operationId: projects_categories_list
      description: Lists all links between categories and projects.
      tags:
      - projects/categories
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: projects_categories_create
      description: Creates a link between a category and a project.
      tags:
      - projects/categories
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCategoryRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCategoryRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/categories/names:
    get:
      operationId: projects_categories_names_list
      description: Lists all categories that can be linked to a project.
      tags:
      - projects/categories
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /projects/commission_dates:
    get:
      operationId: projects_commission_dates_list
      description: Lists all commission dates that can be linked to a project.
      parameters:
      - in: query
        name: commission_id
        schema:
          type: number
        description: Commission id.
      - in: query
        name: project_id
        schema:
          type: number
        description: Project id.
      tags:
      - projects/commission_dates
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectCommissionDate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: projects_commission_dates_create
      description: Creates a link between a project and a commission date.
      tags:
      - projects/commission_dates
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCommissionDateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCommissionDateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCommissionDateRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionDate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/:
    get:
      operationId: users_list
      description: Lists users sharing the same association, or all users (manager).
      parameters:
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: institutions
        schema:
          type: string
        description: Filter by Institutions IDs.
      - in: query
        name: is_cas
        schema:
          type: boolean
        description: Filter for members logged through CAS
      - in: query
        name: is_validated_by_admin
        schema:
          type: boolean
        description: Filter for members not validated by an admin
      - in: query
        name: name
        schema:
          type: string
        description: Filter by first name and last name.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: users_create
      description: Create an account for another person (manager only).
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPartialDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPartialDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserPartialDataRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
  /users/{id}:
    patch:
      operationId: users_partial_update
      description: Updates a user field (with a restriction on CAS auto-generated
        fields).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: users_destroy
      description: Destroys a user from the database (with a restriction on manager
        users).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/associations/:
    get:
      operationId: users_associations_retrieve
      description: Retrieves all associations linked to a user (manager).
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/associations/{association_id}:
    patch:
      operationId: users_associations_partial_update
      description: Updates user role in an association (manager and president).
      parameters:
      - in: path
        name: association_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssociationUserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssociationUserUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssociationUserUpdateRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationUserUpdate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: users_associations_destroy
      description: Destroys an association linked to a user.
      parameters:
      - in: path
        name: association_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationUserDelete'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/:
    get:
      operationId: users_groups_retrieve
      description: Lists all groups linked to a user (manager).
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionCommissionUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/{group_id}:
    delete:
      operationId: users_groups_destroy
      description: Destroys a group linked to a user (manager).
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionCommissionUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/{group_id}/commissions/{commission_id}:
    delete:
      operationId: users_groups_destroy_with_commission
      description: Destroys a group linked to a user with commission argument (manager).
      parameters:
      - in: path
        name: commission_id
        schema:
          type: integer
        required: true
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionCommissionUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/{group_id}/institutions/{institution_id}:
    delete:
      operationId: users_groups_destroy_with_institution
      description: Destroys a group linked to a user with institution argument (manager).
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      - in: path
        name: institution_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionCommissionUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/associations/:
    get:
      operationId: users_associations_list
      description: Lists all associations linked to a user, or all associations of
        all users (manager).
      parameters:
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: institutions
        schema:
          type: string
        description: Filter by Institutions IDs.
      - in: query
        name: is_validated_by_admin
        schema:
          type: boolean
        description: Filter for members not validated by an admin
      tags:
      - users/associations
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssociationUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: users_associations_create
      description: Creates a new link between a user and an association.
      tags:
      - users/associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssociationUserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssociationUserCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssociationUserCreateRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationUserCreate'
          description: ''
        '400':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/auth/cas/login/:
    post:
      operationId: users_auth_cas_login_create
      description: |-
        /users/auth/cas/login/ route

        POST : Authenticates a user through CAS with django-allauth-cas and dj-rest-auth.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CASRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CASRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CASRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAS'
          description: ''
  /users/auth/cas/logout/:
    get:
      operationId: users_auth_cas_logout_retrieve
      description: |-
        /users/auth/cas/logout/ route

        GET : Logs out a user authenticated with CAS out.

        POST : Logs out a user authenticated with CAS out.
      tags:
      - users
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAS'
          description: ''
    post:
      operationId: users_auth_cas_logout_create
      description: |-
        /users/auth/cas/logout/ route

        GET : Logs out a user authenticated with CAS out.

        POST : Logs out a user authenticated with CAS out.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CASRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CASRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CASRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAS'
          description: ''
  /users/auth/login/:
    post:
      operationId: users_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /users/auth/logout/:
    post:
      operationId: users_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - users
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/password/change/:
    post:
      operationId: users_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/password/reset/:
    post:
      operationId: users_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/password/reset/confirm/:
    post:
      operationId: users_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/registration/:
    post:
      operationId: users_auth_registration_create
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/registration/resend-email/:
    post:
      operationId: users_auth_registration_resend_email_create
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/registration/verify-email/:
    post:
      operationId: users_auth_registration_verify_email_create
      description: Send an email to a manager on email validation.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/auth/token/refresh/:
    post:
      operationId: users_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /users/auth/token/verify/:
    post:
      operationId: users_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /users/auth/user/:
    get:
      operationId: users_auth_user_retrieve
      description: |-
        /users/auth/user/ route

        Overrided UserDetailsView to prevent CAS users to change their own auto-generated fields.
      tags:
      - users
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_auth_user_partial_update
      description: Auto-updates user's own account.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_auth_user_destroy
      description: Auto-deletes user's own account.
      tags:
      - users
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /users/external/:
    get:
      operationId: users_external_list
      description: Retrieves an external user from LDAP.
      parameters:
      - in: query
        name: last_name
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalUser'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '500':
          description: No response body
  /users/groups/:
    get:
      operationId: users_groups_list
      description: Lists all groups linked to a user, or all groups of all users (manager).
      tags:
      - users/groups
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupInstitutionCommissionUserCreate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: users_groups_create
      description: Creates a new link between a non-validated user and a group.
      tags:
      - users/groups
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupInstitutionCommissionUserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupInstitutionCommissionUserCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInstitutionCommissionUserCreateRequest'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionCommissionUserCreate'
          description: ''
        '400':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
components:
  schemas:
    ActivityField:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
      required:
      - id
      - name
    AssociationAllDataRead:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        institution:
          type: integer
        institution_component:
          type: integer
        activity_field:
          type: integer
        path_logo:
          type: object
          additionalProperties: {}
          readOnly: true
          description: URL for each thumbnail size
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
        alt_logo:
          type: string
          nullable: true
          title: Logo description
        social_object:
          type: string
        current_projects:
          type: string
        address:
          type: string
          title: Adresse
        phone:
          type: string
          title: Téléphone
          maxLength: 32
        email:
          type: string
          title: Courriel
          maxLength: 256
        siret:
          type: string
          maxLength: 14
        website:
          type: string
          format: uri
          title: Site
          maxLength: 200
        student_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants
        president_names:
          type: string
          maxLength: 256
        president_phone:
          type: string
          maxLength: 32
        is_enabled:
          type: boolean
        is_public:
          type: boolean
        is_site:
          type: boolean
          title: Site ?
        amount_members_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of members allowed
        can_submit_projects:
          type: boolean
        charter_status:
          $ref: '#/components/schemas/CharterStatusEnum'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de création
        approval_date:
          type: string
          format: date
          nullable: true
          title: Date d'agrément
        last_goa_date:
          type: string
          format: date
          nullable: true
          title: Date de la dernière AGO
        cga_date:
          type: string
          format: date
          nullable: true
          title: Date de dernière AG constitutive
        social_networks:
          type: object
          additionalProperties: {}
      required:
      - activity_field
      - creation_date
      - id
      - institution
      - institution_component
      - name
      - path_logo
    AssociationAllDataUpdate:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        acronym:
          type: string
        alt_logo:
          type: string
        social_object:
          type: string
        current_projects:
          type: string
        address:
          type: string
        phone:
          type: string
        email:
          type: string
        siret:
          type: string
        website:
          type: string
        president_names:
          type: string
        president_phone:
          type: string
        institution:
          type: integer
        institution_component:
          type: integer
          nullable: true
        activity_field:
          type: integer
        name:
          type: string
          title: Nom
          maxLength: 250
        path_logo:
          type: string
          format: uri
          nullable: true
          title: Dynamic thumbnails for the logo
        student_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants
        is_enabled:
          type: boolean
        is_public:
          type: boolean
        is_site:
          type: boolean
          title: Site ?
        amount_members_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of members allowed
        can_submit_projects:
          type: boolean
        charter_status:
          $ref: '#/components/schemas/CharterStatusEnum'
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de création
        approval_date:
          type: string
          format: date
          nullable: true
          title: Date d'agrément
        last_goa_date:
          type: string
          format: date
          nullable: true
          title: Date de la dernière AGO
        cga_date:
          type: string
          format: date
          nullable: true
          title: Date de dernière AG constitutive
        social_networks:
          type: object
          additionalProperties: {}
      required:
      - activity_field
      - creation_date
      - id
      - institution
      - institution_component
      - name
    AssociationMandatoryData:
      type: object
      description: Smaller serializer to return only the main informations of an association.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        is_enabled:
          type: boolean
        is_public:
          type: boolean
        is_site:
          type: boolean
          title: Site ?
        institution:
          type: integer
          nullable: true
          title: Etablissement
      required:
      - id
      - name
    AssociationMandatoryDataRequest:
      type: object
      description: Smaller serializer to return only the main informations of an association.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        is_enabled:
          type: boolean
        is_public:
          type: boolean
        is_site:
          type: boolean
          title: Site ?
        institution:
          type: integer
          nullable: true
          title: Etablissement
      required:
      - name
    AssociationName:
      type: object
      description: Smaller serializer used in a simple name list of all associations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        has_president:
          type: boolean
          readOnly: true
        institution:
          type: integer
          nullable: true
          title: Etablissement
      required:
      - has_president
      - id
      - name
    AssociationPartialData:
      type: object
      description: Smaller serializer to return only some of the informations of an
        association.
      properties:
        id:
          type: integer
          readOnly: true
        institution:
          type: integer
        institution_component:
          type: integer
        activity_field:
          type: integer
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
        email:
          type: string
          title: Courriel
          maxLength: 256
        is_enabled:
          type: boolean
        is_public:
          type: boolean
        is_site:
          type: boolean
          title: Site ?
        alt_logo:
          type: string
          nullable: true
          title: Logo description
        path_logo:
          type: object
          additionalProperties: {}
          readOnly: true
          description: URL for each thumbnail size
      required:
      - activity_field
      - id
      - institution
      - institution_component
      - name
      - path_logo
    AssociationUser:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        association:
          type: integer
        is_president:
          type: boolean
        can_be_president_from:
          type: string
          format: date
          nullable: true
        can_be_president_to:
          type: string
          format: date
          nullable: true
        is_validated_by_admin:
          type: boolean
        is_vice_president:
          type: boolean
        is_secretary:
          type: boolean
        is_treasurer:
          type: boolean
      required:
      - association
      - id
      - user
    AssociationUserCreate:
      type: object
      description: Serializer for user-associations creation.
      properties:
        user:
          type: string
        association:
          type: integer
        is_president:
          type: boolean
        is_validated_by_admin:
          type: boolean
        is_vice_president:
          type: boolean
        is_secretary:
          type: boolean
        is_treasurer:
          type: boolean
      required:
      - association
      - user
    AssociationUserCreateRequest:
      type: object
      description: Serializer for user-associations creation.
      properties:
        user:
          type: string
        association:
          type: integer
        is_president:
          type: boolean
        is_validated_by_admin:
          type: boolean
        is_vice_president:
          type: boolean
        is_secretary:
          type: boolean
        is_treasurer:
          type: boolean
      required:
      - association
      - user
    AssociationUserDelete:
      type: object
      description: Serializer for user-associations deletion.
      properties:
        user:
          type: integer
        association:
          type: integer
      required:
      - association
      - user
    AssociationUserUpdate:
      type: object
      description: Serializer for user-associations change.
      properties:
        is_president:
          type: boolean
        can_be_president_from:
          type: string
          format: date
          nullable: true
        can_be_president_to:
          type: string
          format: date
          nullable: true
        is_validated_by_admin:
          type: boolean
        is_vice_president:
          type: boolean
        is_secretary:
          type: boolean
        is_treasurer:
          type: boolean
    CAS:
      type: object
      description: Main serializer.
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        ticket:
          type: string
        service:
          type: string
          format: uri
      required:
      - service
      - ticket
    CASRequest:
      type: object
      description: Main serializer.
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
        ticket:
          type: string
          minLength: 1
        service:
          type: string
          format: uri
          minLength: 1
      required:
      - service
      - ticket
    Category:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
      required:
      - id
      - name
    CategoryRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
      required:
      - name
    CharterStatusEnum:
      enum:
      - CHARTER_DRAFT
      - CHARTER_REJECTED
      - CHARTER_PROCESSING
      - CHARTER_VALIDATED
      - CHARTER_EXPIRED
      type: string
    Commission:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
        is_site:
          type: boolean
          title: Site ?
        institution:
          type: integer
          title: Etablissement
      required:
      - acronym
      - id
      - institution
      - name
    CommissionDate:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        submission_date:
          type: string
          format: date
          title: Project submission limit date
        commission_date:
          type: string
          format: date
        commission:
          type: integer
      required:
      - commission
      - commission_date
      - id
      - submission_date
    CommissionDateRequest:
      type: object
      description: Main serializer.
      properties:
        submission_date:
          type: string
          format: date
          title: Project submission limit date
        commission_date:
          type: string
          format: date
        commission:
          type: integer
      required:
      - commission
      - commission_date
      - submission_date
    Content:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 128
        label:
          type: string
          maxLength: 128
        header:
          type: string
        body:
          type: string
        footer:
          type: string
      required:
      - body
      - code
      - id
      - label
    ContentBody:
      type: object
      description: Main serializer.
      properties:
        header:
          type: string
        body:
          type: string
        footer:
          type: string
      required:
      - body
    CustomRegisterRequest:
      type: object
      description: Used for the user registration form (to parse the phone field).
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
          maxLength: 254
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        phone:
          type: string
      required:
      - email
      - first_name
      - last_name
    Document:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
        description:
          type: string
        contact:
          type: string
          title: Contact address
        is_multiple:
          type: boolean
        is_required_in_process:
          type: boolean
        days_before_expiration:
          type: string
          title: Days before document expiration
        path_template:
          type: string
          format: uri
          nullable: true
          title: Example template file
        mime_types:
          type: array
          items:
            type: string
            maxLength: 128
        process_type:
          allOf:
          - $ref: '#/components/schemas/ProcessTypeEnum'
          title: Document Status
        institution:
          type: integer
          nullable: true
          title: Etablissement
        commission:
          type: integer
          nullable: true
      required:
      - id
    DocumentRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        acronym:
          type: string
          minLength: 1
          title: Acronyme
        description:
          type: string
          minLength: 1
        contact:
          type: string
          minLength: 1
          title: Contact address
        is_multiple:
          type: boolean
        is_required_in_process:
          type: boolean
        days_before_expiration:
          type: string
          title: Days before document expiration
        path_template:
          type: string
          format: binary
          nullable: true
          title: Example template file
        mime_types:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        process_type:
          allOf:
          - $ref: '#/components/schemas/ProcessTypeEnum'
          title: Document Status
        institution:
          type: integer
          nullable: true
          title: Etablissement
        commission:
          type: integer
          nullable: true
    DocumentUpload:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        path_file:
          type: string
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        upload_date:
          type: string
          format: date-time
          readOnly: true
        document_upload_status:
          $ref: '#/components/schemas/DocumentUploadStatusEnum'
        document:
          type: integer
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        project:
          type: integer
          nullable: true
      required:
      - document
      - id
      - path_file
      - upload_date
    DocumentUploadCreate:
      type: object
      description: Main serializer not overriding path_file.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        upload_date:
          type: string
          format: date-time
          readOnly: true
        path_file:
          type: string
          format: uri
          title: Uploaded file
        document_upload_status:
          $ref: '#/components/schemas/DocumentUploadStatusEnum'
        document:
          type: integer
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        project:
          type: integer
          nullable: true
      required:
      - document
      - id
      - path_file
      - upload_date
    DocumentUploadCreateRequest:
      type: object
      description: Main serializer not overriding path_file.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        path_file:
          type: string
          format: binary
          title: Uploaded file
        document_upload_status:
          $ref: '#/components/schemas/DocumentUploadStatusEnum'
        document:
          type: integer
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        project:
          type: integer
          nullable: true
      required:
      - document
      - path_file
    DocumentUploadFile:
      type: object
      description: Retrieve only the file itself.
      properties:
        path_file:
          type: string
          format: uri
          title: Uploaded file
        name:
          type: string
          title: Nom
          maxLength: 250
      required:
      - path_file
    DocumentUploadStatusEnum:
      enum:
      - DOCUMENT_REJECTED
      - DOCUMENT_PROCESSING
      - DOCUMENT_VALIDATED
      type: string
    ExternalUser:
      type: object
      description: External user serializer.
      properties:
        first_name:
          type: string
        last_name:
          type: string
        mail:
          type: string
        username:
          type: string
    Group:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 150
        permissions:
          type: object
          additionalProperties: {}
          readOnly: true
        is_public:
          type: boolean
          readOnly: true
      required:
      - id
      - is_public
      - name
      - permissions
    GroupInstitutionCommissionUser:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        group:
          type: integer
        institution:
          type: integer
          nullable: true
        commission:
          type: integer
          nullable: true
      required:
      - group
      - id
      - user
    GroupInstitutionCommissionUserCreate:
      type: object
      description: Serializer for user-groups creation (with username instead of id).
      properties:
        user:
          type: string
        group:
          type: integer
        institution:
          type: integer
          nullable: true
        commission:
          type: integer
          nullable: true
      required:
      - group
      - user
    GroupInstitutionCommissionUserCreateRequest:
      type: object
      description: Serializer for user-groups creation (with username instead of id).
      properties:
        user:
          type: string
        group:
          type: integer
        institution:
          type: integer
          nullable: true
        commission:
          type: integer
          nullable: true
      required:
      - group
      - user
    Institution:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
      required:
      - acronym
      - id
      - name
    InstitutionComponent:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        institution:
          type: integer
          nullable: true
          title: Etablissement
      required:
      - id
      - name
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - access_token
      - refresh_token
      - user
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
      required:
      - password
    PasswordChangeRequest:
      type: object
      description: Overrided PasswordChangeSerializer to prevent CAS users to change
        their passwords.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordResetConfirmRequest:
      type: object
      description: Overrided PasswordResetConfirmSerializer to send a email when password
        is reset.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PasswordResetRequest:
      type: object
      description: Overrided PasswordResetSerializer to prevent CAS users to reset
        their passwords.
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedAssociationAllDataUpdateRequest:
      type: object
      description: Main serializer.
      properties:
        acronym:
          type: string
        alt_logo:
          type: string
        social_object:
          type: string
        current_projects:
          type: string
        address:
          type: string
        phone:
          type: string
        email:
          type: string
        siret:
          type: string
        website:
          type: string
        president_names:
          type: string
        president_phone:
          type: string
        institution:
          type: integer
        institution_component:
          type: integer
          nullable: true
        activity_field:
          type: integer
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        path_logo:
          type: string
          format: binary
          nullable: true
          title: Dynamic thumbnails for the logo
        student_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants
        is_enabled:
          type: boolean
        is_public:
          type: boolean
        is_site:
          type: boolean
          title: Site ?
        amount_members_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of members allowed
        can_submit_projects:
          type: boolean
        charter_status:
          $ref: '#/components/schemas/CharterStatusEnum'
        approval_date:
          type: string
          format: date
          nullable: true
          title: Date d'agrément
        last_goa_date:
          type: string
          format: date
          nullable: true
          title: Date de la dernière AGO
        cga_date:
          type: string
          format: date
          nullable: true
          title: Date de dernière AG constitutive
        social_networks:
          type: object
          additionalProperties: {}
    PatchedAssociationUserUpdateRequest:
      type: object
      description: Serializer for user-associations change.
      properties:
        is_president:
          type: boolean
        can_be_president_from:
          type: string
          format: date
          nullable: true
        can_be_president_to:
          type: string
          format: date
          nullable: true
        is_validated_by_admin:
          type: boolean
        is_vice_president:
          type: boolean
        is_secretary:
          type: boolean
        is_treasurer:
          type: boolean
    PatchedContentBodyRequest:
      type: object
      description: Main serializer.
      properties:
        header:
          type: string
          minLength: 1
        body:
          type: string
          minLength: 1
        footer:
          type: string
          minLength: 1
    PatchedDocumentRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        acronym:
          type: string
          minLength: 1
          title: Acronyme
        description:
          type: string
          minLength: 1
        contact:
          type: string
          minLength: 1
          title: Contact address
        is_multiple:
          type: boolean
        is_required_in_process:
          type: boolean
        days_before_expiration:
          type: string
          title: Days before document expiration
        path_template:
          type: string
          format: binary
          nullable: true
          title: Example template file
        mime_types:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        process_type:
          allOf:
          - $ref: '#/components/schemas/ProcessTypeEnum'
          title: Document Status
        institution:
          type: integer
          nullable: true
          title: Etablissement
        commission:
          type: integer
          nullable: true
    PatchedProjectCommissionDateDataRequest:
      type: object
      description: Only data serializer.
      properties:
        is_first_edition:
          type: boolean
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount asked on previous edition
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount earned on previous edition
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_validated_by_admin:
          type: boolean
    PatchedProjectRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Start date
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: End date
        location:
          type: string
          minLength: 1
          title: Adresse
        other_first_name:
          type: string
        other_last_name:
          type: string
        other_email:
          type: string
        other_phone:
          type: string
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        budget_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Budget on previous edition
        target_audience:
          type: string
          minLength: 1
        amount_students_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of students in target audience
        amount_all_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of all people in target audience
        ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of money asked for each person
        individual_cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of money needed by person
        goals:
          type: string
          minLength: 1
        summary:
          type: string
          minLength: 1
          title: Résumé
        planned_activities:
          type: string
          minLength: 1
          title: Planned activites
        prevention_safety:
          type: string
          minLength: 1
          title: Planned prevention and safety actions
        marketing_campaign:
          type: string
          minLength: 1
        project_status:
          $ref: '#/components/schemas/ProjectStatusEnum'
    PatchedProjectRestrictedRequest:
      type: object
      description: Serializer for restricted fields.
      properties:
        project_status:
          $ref: '#/components/schemas/ProjectStatusEnum'
    PatchedUserRequest:
      type: object
      description: Main serializer.
      properties:
        username:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
          maxLength: 254
        phone:
          type: string
        is_validated_by_admin:
          type: boolean
          title: Is validated by administrator
        can_submit_projects:
          type: boolean
    ProcessTypeEnum:
      enum:
      - CHARTER_ASSOCIATION
      - CHARTER_ASSOCIATION_INSTITUTION
      - CHARTER_PROJECT_COMMISSION
      - DOCUMENT_ASSOCIATION
      - DOCUMENT_USER
      - DOCUMENT_PROJECT
      - DOCUMENT_PROJECT_REVIEW
      - NO_PROCESS
      type: string
    Project:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Start date
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: End date
        location:
          type: string
          title: Adresse
        other_first_name:
          type: string
        other_last_name:
          type: string
        other_email:
          type: string
        other_phone:
          type: string
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        commission_dates:
          type: array
          items:
            $ref: '#/components/schemas/CommissionDate'
          readOnly: true
        budget_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Budget on previous edition
        target_audience:
          type: string
        amount_students_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of students in target audience
        amount_all_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of all people in target audience
        ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of money asked for each person
        individual_cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of money needed by person
        goals:
          type: string
        summary:
          type: string
          title: Résumé
        planned_activities:
          type: string
          title: Planned activites
        prevention_safety:
          type: string
          title: Planned prevention and safety actions
        marketing_campaign:
          type: string
        project_status:
          $ref: '#/components/schemas/ProjectStatusEnum'
      required:
      - categories
      - commission_dates
      - id
      - name
    ProjectCategory:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        category:
          type: integer
      required:
      - category
      - id
      - project
    ProjectCategoryRequest:
      type: object
      description: Main serializer.
      properties:
        project:
          type: integer
        category:
          type: integer
      required:
      - category
      - project
    ProjectCommissionDate:
      type: object
      description: Complete serializer.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        commission_date:
          type: integer
        is_first_edition:
          type: boolean
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount asked on previous edition
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount earned on previous edition
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_validated_by_admin:
          type: boolean
      required:
      - commission_date
      - id
      - project
    ProjectCommissionDateData:
      type: object
      description: Only data serializer.
      properties:
        is_first_edition:
          type: boolean
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount asked on previous edition
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount earned on previous edition
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_validated_by_admin:
          type: boolean
    ProjectCommissionDateRequest:
      type: object
      description: Complete serializer.
      properties:
        project:
          type: integer
        commission_date:
          type: integer
        is_first_edition:
          type: boolean
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount asked on previous edition
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount earned on previous edition
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_validated_by_admin:
          type: boolean
      required:
      - commission_date
      - project
    ProjectPartialData:
      type: object
      description: Serializer for project list.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        association:
          type: integer
          nullable: true
        user:
          type: integer
          nullable: true
          title: Utilisateur
        edition_date:
          type: string
          format: date-time
          readOnly: true
        project_status:
          $ref: '#/components/schemas/ProjectStatusEnum'
      required:
      - edition_date
      - id
      - name
    ProjectRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Start date
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: End date
        location:
          type: string
          minLength: 1
          title: Adresse
        other_first_name:
          type: string
        other_last_name:
          type: string
        other_email:
          type: string
        other_phone:
          type: string
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        budget_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Budget on previous edition
        target_audience:
          type: string
          minLength: 1
        amount_students_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of students in target audience
        amount_all_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of all people in target audience
        ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of money asked for each person
        individual_cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Amount of money needed by person
        goals:
          type: string
          minLength: 1
        summary:
          type: string
          minLength: 1
          title: Résumé
        planned_activities:
          type: string
          minLength: 1
          title: Planned activites
        prevention_safety:
          type: string
          minLength: 1
          title: Planned prevention and safety actions
        marketing_campaign:
          type: string
          minLength: 1
        project_status:
          $ref: '#/components/schemas/ProjectStatusEnum'
      required:
      - name
    ProjectRestricted:
      type: object
      description: Serializer for restricted fields.
      properties:
        project_status:
          $ref: '#/components/schemas/ProjectStatusEnum'
    ProjectStatusEnum:
      enum:
      - PROJECT_DRAFT
      - PROJECT_REJECTED
      - PROJECT_PROCESSING
      - PROJECT_VALIDATED
      - PROJECT_REVIEW_CANCELLED
      - PROJECT_REVIEW_DRAFT
      - PROJECT_REVIEW_REJECTED
      - PROJECT_REVIEW_PROCESSING
      - PROJECT_REVIEW_VALIDATED
      type: string
    ResendEmailVerificationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    User:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
        phone:
          type: string
        is_cas:
          type: boolean
          readOnly: true
        has_validated_email:
          type: boolean
          readOnly: true
        is_validated_by_admin:
          type: boolean
          title: Is validated by administrator
        can_submit_projects:
          type: boolean
        associations:
          type: array
          items:
            $ref: '#/components/schemas/AssociationMandatoryData'
          readOnly: true
        groups:
          type: object
          additionalProperties: {}
          readOnly: true
        permissions:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - associations
      - email
      - first_name
      - groups
      - has_validated_email
      - id
      - is_cas
      - last_name
      - permissions
      - username
    UserPartialDataRequest:
      type: object
      description: Used to get data from another student in the same associations.
      properties:
        username:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        is_cas:
          type: boolean
          default: false
        is_validated_by_admin:
          type: boolean
          title: Is validated by administrator
      required:
      - first_name
      - last_name
      - username
    VerifyEmailRequest:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - key
  securitySchemes:
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: plana-auth
    jwtHeaderAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
