openapi: 3.0.3
info:
  title: PlanA API
  version: 1.2.0-rc2
  description: API for PlanA
paths:
  /associations/:
    get:
      operationId: associations_list
      description: List all associations with many filters.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Association acronym.
      - in: query
        name: activity_field
        schema:
          type: integer
        description: Filter by Activity Field ID.
      - in: query
        name: institution_component
        schema:
          type: integer
        description: Filter by Institution Component ID.
      - in: query
        name: institutions
        schema:
          type: integer
        description: Filter by Institution ID.
      - in: query
        name: is_enabled
        schema:
          type: boolean
        description: Filter for non-validated associations.
      - in: query
        name: is_public
        schema:
          type: boolean
        description: Filter for associations shown in the public list.
      - in: query
        name: is_site
        schema:
          type: boolean
        description: Filter for associations from site.
      - in: query
        name: name
        schema:
          type: string
        description: Association name.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter by User ID.
      tags:
      - associations
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssociationPartialData'
          description: ''
    post:
      operationId: associations_create
      description: Create a new association with mandatory informations (manager only).
      tags:
      - associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssociationMandatoryDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssociationMandatoryDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssociationMandatoryDataRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationMandatoryData'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /associations/{id}:
    get:
      operationId: associations_retrieve
      description: Retrieve an association with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataRead'
          description: ''
        '403':
          description: No response body
        '404':
          description: No response body
    patch:
      operationId: associations_partial_update
      description: Update association details (president and manager only, restricted
        fields for president).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssociationAllDataUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssociationAllDataUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssociationAllDataUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataUpdate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
        '415':
          description: No response body
    delete:
      operationId: associations_destroy
      description: Destroys an entire association (manager only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataUpdate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /associations/{id}/export:
    get:
      operationId: associations_export_retrieve
      description: Retrieve a PDF file.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataRead'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /associations/{id}/status:
    patch:
      operationId: associations_status_partial_update
      description: Update association charter status.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssociationStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssociationStatusRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssociationStatusRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationStatus'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /associations/activity_fields:
    get:
      operationId: associations_activity_fields_list
      description: List all activity fields that can be linked to an association.
      tags:
      - associations
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityField'
          description: ''
  /associations/export:
    get:
      operationId: associations_export_list
      description: Associations list export.
      parameters:
      - in: query
        name: associations
        schema:
          type: string
        description: IDs of selected associations, separated by a comma.
      - in: query
        name: mode
        schema:
          type: string
        description: Export mode (xlsx or csv, csv by default).
      tags:
      - associations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAllDataRead'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
  /associations/names:
    get:
      operationId: associations_names_list
      description: List minimal details for all associations with many filters.
      parameters:
      - in: query
        name: allow_new_users
        schema:
          type: boolean
        description: Filter for associations where registration is possible.
      - in: query
        name: institutions
        schema:
          type: string
        description: Filter by Institutions IDs.
      - in: query
        name: is_public
        schema:
          type: boolean
        description: Filter for associations shown in the public list.
      tags:
      - associations
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssociationName'
          description: ''
  /commissions/:
    get:
      operationId: commissions_list
      description: List all commissions.
      parameters:
      - in: query
        name: dates
        schema:
          type: string
        description: Filter by commission_date field (multiple).
      - in: query
        name: funds
        schema:
          type: string
        description: Filter by linked funds.
      - in: query
        name: is_open_to_projects
        schema:
          type: boolean
        description: Filter to get only commissions with open projects submissions.
      - in: query
        name: is_site
        schema:
          type: boolean
        description: Filter to get commission by fund is_site setting.
      - in: query
        name: managed_projects
        schema:
          type: boolean
        description: Filter to get commissions with projects managed by the current
          user.
      - in: query
        name: only_with_active_projects
        schema:
          type: boolean
        description: Filter to get commission_dates where projects reviews are still
          pending exclusively.
      - in: query
        name: with_active_projects
        schema:
          type: boolean
        description: Filter to get commission_dates where projects reviews are still
          pending or not.
      tags:
      - commissions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Commission'
          description: ''
    post:
      operationId: commissions_create
      description: Create a new commission (manager only).
      tags:
      - commissions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommissionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CommissionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commission'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
  /commissions/{commission_id}/funds:
    get:
      operationId: commissions_funds_retrieve
      description: Retrieve all funds linked to a commission.
      parameters:
      - in: path
        name: commission_id
        schema:
          type: integer
        required: true
      tags:
      - commissions/funds
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionFund'
          description: ''
        '404':
          description: No response body
  /commissions/{commission_id}/funds/{fund_id}:
    delete:
      operationId: commissions_funds_destroy
      description: Destroys a link between commission and fund.
      parameters:
      - in: path
        name: commission_id
        schema:
          type: integer
        required: true
      - in: path
        name: fund_id
        schema:
          type: integer
        required: true
      tags:
      - commissions/funds
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionFund'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /commissions/{id}:
    get:
      operationId: commissions_retrieve
      description: Retrieve a commission date with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - commissions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commission'
          description: ''
        '404':
          description: No response body
    patch:
      operationId: commissions_partial_update
      description: Update commission date details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - commissions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommissionUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommissionUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommissionUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commission'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: commissions_destroy
      description: Destroys an entire commission (manager only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - commissions
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commission'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /commissions/{id}/export:
    get:
      operationId: commissions_export_retrieve
      description: Projects presented to the commission export.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: mode
        schema:
          type: string
        description: Export mode (xlsx, csv or pdf, csv by default).
      - in: query
        name: project_ids
        schema:
          type: string
        description: Filter by Projects IDs.
      tags:
      - commissions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '401':
          description: No response body
        '404':
          description: No response body
  /commissions/funds:
    get:
      operationId: commissions_funds_list
      description: List all links between commissions and funds.
      tags:
      - commissions/funds
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionFund'
          description: ''
    post:
      operationId: commissions_funds_create
      description: Create a link between a commission and a fund.
      tags:
      - commissions/funds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommissionFundRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommissionFundRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CommissionFundRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommissionFund'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /commissions/funds/names:
    get:
      operationId: commissions_funds_names_list
      description: List all fund types.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Fund acronym.
      tags:
      - commissions/funds
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fund'
          description: ''
  /contents/:
    get:
      operationId: contents_list
      description: List all contents.
      parameters:
      - in: query
        name: code
        schema:
          type: string
        description: Content code.
      - in: query
        name: is_editable
        schema:
          type: boolean
        description: Is editable.
      tags:
      - contents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Content'
          description: ''
  /contents/{id}:
    get:
      operationId: contents_retrieve
      description: Retrieve a content.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
        '404':
          description: No response body
    patch:
      operationId: contents_partial_update
      description: Update association details (president and manager only, restricted
        fields for president).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - contents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContentUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContentUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentUpdate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /contents/logos:
    get:
      operationId: contents_logos_list
      description: List all logos.
      tags:
      - contents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Logo'
          description: ''
  /documents/:
    get:
      operationId: documents_list
      description: List all documents types.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Document acronym.
      - in: query
        name: fund_ids
        schema:
          type: integer
        description: Document fund IDs.
      - in: query
        name: process_types
        schema:
          type: string
        description: Document process type.
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
          description: ''
    post:
      operationId: documents_create
      description: Create a new document type (manager only).
      tags:
      - documents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
  /documents/{id}:
    get:
      operationId: documents_retrieve
      description: Retrieve a document type with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '404':
          description: No response body
    patch:
      operationId: documents_partial_update
      description: Update document details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
        '415':
          description: No response body
    delete:
      operationId: documents_destroy
      description: Destroys an entire document type (manager only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /documents/uploads:
    get:
      operationId: documents_uploads_list
      description: List all documents uploads.
      parameters:
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: is_validated_by_admin
        schema:
          type: boolean
        description: Filter for documents not validated by an admin
      - in: query
        name: process_types
        schema:
          type: string
        description: Document process type.
      - in: query
        name: project_id
        schema:
          type: integer
        description: Filter by Project ID.
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter by User ID.
      tags:
      - documents/uploads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentUploadList'
          description: ''
        '401':
          description: No response body
    post:
      operationId: documents_uploads_create
      description: Create a new document upload.
      tags:
      - documents/uploads
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentUploadCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUploadCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadCreate'
          description: ''
        '400':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
        '415':
          description: No response body
  /documents/uploads/{id}:
    get:
      operationId: documents_uploads_retrieve
      description: Retrieve a document uploaded by a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents/uploads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadRetrieve'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    patch:
      operationId: documents_uploads_partial_update
      description: Update document upload details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents/uploads
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUploadUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUploadUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUploadUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadUpdate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: documents_uploads_destroy
      description: Destroys an uploaded document.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents/uploads
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadRetrieve'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /documents/uploads/{id}/file:
    get:
      operationId: documents_uploads_file_retrieve
      description: Retrieve a document uploaded by a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents/uploads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadFile'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /documents/uploads/file:
    get:
      operationId: documents_uploads_file_list
      description: Retrieve all uploaded documents.
      parameters:
      - in: query
        name: project_id
        schema:
          type: integer
        description: Filter by Project ID.
      tags:
      - documents/uploads
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentUploadFile'
          description: ''
        '401':
          description: No response body
  /groups/:
    get:
      operationId: groups_list
      description: List all groups.
      parameters:
      - in: query
        name: name
        schema:
          type: string
        description: Group name.
      tags:
      - groups
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
  /institutions/:
    get:
      operationId: institutions_list
      description: List all institutions.
      parameters:
      - in: query
        name: acronym
        schema:
          type: string
        description: Institution acronym.
      tags:
      - institutions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
          description: ''
  /institutions/institution_components:
    get:
      operationId: institutions_institution_components_list
      description: List all institution components.
      tags:
      - institutions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionComponent'
          description: ''
  /projects/:
    get:
      operationId: projects_list
      description: List all projects linked to a user, or all projects with all their
        details (manager).
      parameters:
      - in: query
        name: active_projects
        schema:
          type: boolean
        description: Filter to get projects where reviews are still pending.
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: commission_id
        schema:
          type: string
        description: Filter by Commission ID linked to a project.
      - in: query
        name: manual_identifier
        schema:
          type: string
        description: Filter by manual identifier.
      - in: query
        name: name
        schema:
          type: string
        description: Filter by name.
      - in: query
        name: project_statuses
        schema:
          type: string
        description: Filter by Project Statuses codes.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter by User ID.
      - in: query
        name: with_comments
        schema:
          type: boolean
        description: Filter to get projects where comments are posted.
      - in: query
        name: year
        schema:
          type: integer
        description: Filter by creation_date year.
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectPartialData'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: projects_create
      description: Create a new project.
      tags:
      - projects
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{id}:
    get:
      operationId: projects_retrieve
      description: Retrieve a project with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    patch:
      operationId: projects_partial_update
      description: Update project details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: projects_destroy
      description: Destroys a project.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{id}/pdf_export:
    get:
      operationId: projects_pdf_export_retrieve
      description: Retrieve a PDF file.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{id}/review:
    get:
      operationId: projects_review_retrieve
      description: Retrieve a project review with all its details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectReview'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    patch:
      operationId: projects_review_partial_update
      description: Update project review details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectReviewUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectReviewUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectReviewUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectReviewUpdate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{id}/review/pdf_export:
    get:
      operationId: projects_review_pdf_export_retrieve
      description: Retrieve a PDF file.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{id}/status:
    patch:
      operationId: projects_status_partial_update
      description: Update project status.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectStatusRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectStatusRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatus'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/categories:
    get:
      operationId: projects_categories_retrieve
      description: Retrieve all categories linked to a project.
      parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/categories/{category_id}:
    delete:
      operationId: projects_categories_destroy
      description: Destroys a link between project and category.
      parameters:
      - in: path
        name: category_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/categories
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/comments:
    get:
      operationId: projects_comments_retrieve
      description: Retrieve all comments linked to a project.
      parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/comments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComment'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/comments/{comment_id}:
    patch:
      operationId: projects_comments_partial_update
      description: Update comments of the project.
      parameters:
      - in: path
        name: comment_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/comments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommentUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommentUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComment'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: projects_comments_destroy
      description: Destroys comments of a project.
      parameters:
      - in: path
        name: comment_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/comments
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComment'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/commission_funds:
    get:
      operationId: projects_commission_funds_retrieve
      description: Retrieve all commission dates linked to a project.
      parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/commission_funds
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionFund'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/{project_id}/commission_funds/{commission_fund_id}:
    patch:
      operationId: projects_commission_funds_partial_update
      description: Update details of a project linked to a commission fund object.
      parameters:
      - in: path
        name: commission_fund_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/commission_funds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommissionFundDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommissionFundDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommissionFundDataRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionFundData'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: projects_commission_funds_destroy
      description: Destroys details of a project linked to a commission date.
      parameters:
      - in: path
        name: commission_fund_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - projects/commission_funds
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionFund'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/categories:
    get:
      operationId: projects_categories_list
      description: List all links between categories and projects.
      parameters:
      - in: query
        name: project_id
        schema:
          type: number
        description: Project id.
      tags:
      - projects/categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: projects_categories_create
      description: Create a link between a category and a project.
      tags:
      - projects/categories
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCategoryRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCategoryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/categories/names:
    get:
      operationId: projects_categories_names_list
      description: List all categories that can be linked to a project.
      tags:
      - projects/categories
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /projects/comments:
    post:
      operationId: projects_comments_create
      description: Create a link between a comment and a project.
      tags:
      - projects/comments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCommentDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCommentDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCommentDataRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComment'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /projects/commission_funds:
    get:
      operationId: projects_commission_funds_list
      description: List all commission funds that can be linked to a project.
      parameters:
      - in: query
        name: commission_id
        schema:
          type: number
        description: Commission id.
      - in: query
        name: project_id
        schema:
          type: number
        description: Project id.
      tags:
      - projects/commission_funds
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectCommissionFund'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: projects_commission_funds_create
      description: Create a link between a project and a commission fund object.
      tags:
      - projects/commission_funds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCommissionFundRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCommissionFundRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCommissionFundRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommissionFund'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/:
    get:
      operationId: users_list
      description: List users sharing the same association, or all users (manager).
      parameters:
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: email
        schema:
          type: string
        description: Filter by email.
      - in: query
        name: institutions
        schema:
          type: string
        description: Filter by Institutions IDs.
      - in: query
        name: is_cas
        schema:
          type: boolean
        description: Filter for members logged through CAS
      - in: query
        name: is_validated_by_admin
        schema:
          type: boolean
        description: Filter for members not validated by an admin
      - in: query
        name: name
        schema:
          type: string
        description: Filter by first name and last name.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: users_create
      description: Create an account for another person (manager only).
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPartialDataRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPartialDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserPartialDataRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
  /users/{id}:
    get:
      operationId: users_retrieve
      description: Retrieve a user with all details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    patch:
      operationId: users_partial_update
      description: Update a user field (with a restriction on CAS auto-generated fields).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: users_destroy
      description: Destroys a user from the database (with a restriction on manager
        users).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/associations/:
    get:
      operationId: users_associations_retrieve
      description: Retrieve all associations linked to a user (manager).
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/associations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/associations/{association_id}:
    patch:
      operationId: users_associations_partial_update
      description: Update user role in an association (manager and president).
      parameters:
      - in: path
        name: association_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssociationUserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssociationUserUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssociationUserUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
    delete:
      operationId: users_associations_destroy
      description: Destroys an association linked to a user.
      parameters:
      - in: path
        name: association_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/associations
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationUserUpdate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/:
    get:
      operationId: users_groups_retrieve
      description: List all groups linked to a user (manager).
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionFundUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/{group_id}:
    delete:
      operationId: users_groups_destroy
      description: Destroys a group linked to a user (manager).
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionFundUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/{group_id}/funds/{fund_id}:
    delete:
      operationId: users_groups_destroy_with_fund
      description: Destroys a group linked to a user with fund argument (manager).
      parameters:
      - in: path
        name: fund_id
        schema:
          type: integer
        required: true
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionFundUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/{user_id}/groups/{group_id}/institutions/{institution_id}:
    delete:
      operationId: users_groups_destroy_with_institution
      description: Destroys a group linked to a user with institution argument (manager).
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      - in: path
        name: institution_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users/groups
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionFundUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/associations/:
    get:
      operationId: users_associations_list
      description: List all associations linked to a user, or all associations of
        all users (manager).
      parameters:
      - in: query
        name: association_id
        schema:
          type: integer
        description: Filter by Association ID.
      - in: query
        name: institutions
        schema:
          type: string
        description: Filter by Institutions IDs.
      - in: query
        name: is_validated_by_admin
        schema:
          type: boolean
        description: Filter for members not validated by an admin
      tags:
      - users/associations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssociationUser'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: users_associations_create
      description: Create a new link between a user and an association.
      tags:
      - users/associations
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssociationUserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssociationUserCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssociationUserCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationUserCreate'
          description: ''
        '400':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
  /users/auth/cas/login/:
    post:
      operationId: users_auth_cas_login_create
      description: |-
        /users/auth/cas/login/ route.

        POST : Authenticates a user through CAS with django-allauth-cas and dj-rest-auth.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CASRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CASRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CASRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAS'
          description: ''
  /users/auth/cas/logout/:
    get:
      operationId: users_auth_cas_logout_retrieve
      description: |-
        /users/auth/cas/logout/ route.

        GET : Logs out a user authenticated with CAS out.

        POST : Logs out a user authenticated with CAS out.
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAS'
          description: ''
    post:
      operationId: users_auth_cas_logout_create
      description: |-
        /users/auth/cas/logout/ route.

        GET : Logs out a user authenticated with CAS out.

        POST : Logs out a user authenticated with CAS out.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CASRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CASRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CASRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAS'
          description: ''
  /users/auth/login/:
    post:
      operationId: users_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /users/auth/logout/:
    post:
      operationId: users_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/password/change/:
    post:
      operationId: users_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/password/reset/:
    post:
      operationId: users_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/password/reset/confirm/:
    post:
      operationId: users_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/registration/:
    post:
      operationId: users_auth_registration_create
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRegisterRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/registration/resend-email/:
    post:
      operationId: users_auth_registration_resend_email_create
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /users/auth/registration/verify-email/:
    post:
      operationId: users_auth_registration_verify_email_create
      description: Send an email to a manager on email validation.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/auth/token/refresh/:
    post:
      operationId: users_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /users/auth/token/verify/:
    post:
      operationId: users_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /users/auth/user/:
    get:
      operationId: users_auth_user_retrieve
      description: |-
        /users/auth/user/ route.

        Overrided UserDetailsView to prevent CAS users to change their own auto-generated fields.
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_auth_user_partial_update
      description: Auto-updates user's own account.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_auth_user_destroy
      description: Auto-deletes user's own account.
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /users/external/:
    get:
      operationId: users_external_list
      description: Retrieve an external user from LDAP.
      parameters:
      - in: query
        name: last_name
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalUser'
          description: ''
        '400':
          description: No response body
        '401':
          description: No response body
        '403':
          description: No response body
        '500':
          description: No response body
  /users/groups/:
    get:
      operationId: users_groups_list
      description: List all groups linked to a user, or all groups of all users (manager).
      tags:
      - users/groups
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupInstitutionFundUserCreate'
          description: ''
        '401':
          description: No response body
        '403':
          description: No response body
    post:
      operationId: users_groups_create
      description: Create a new link between a non-validated user and a group.
      tags:
      - users/groups
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupInstitutionFundUserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupInstitutionFundUserCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInstitutionFundUserCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInstitutionFundUserCreate'
          description: ''
        '400':
          description: No response body
        '403':
          description: No response body
        '404':
          description: No response body
components:
  schemas:
    ActivityField:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
      required:
      - id
      - name
    AssociationAllDataRead:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        institution:
          type: integer
        institution_component:
          type: integer
        activity_field:
          type: integer
        path_logo:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Lien pour chaque taille de miniature
        name:
          type: string
          title: Nom
          maxLength: 250
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 256
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
        social_object:
          type: string
          title: Objet social
        current_projects:
          type: string
          title: Projets en cours
        address:
          type: string
          title: Adresse
        zipcode:
          type: string
          title: Code postal
          maxLength: 32
        city:
          type: string
          title: Ville
          maxLength: 128
        country:
          type: string
          title: Pays
          maxLength: 128
        phone:
          type: string
          title: Téléphone
          maxLength: 32
        siret:
          type: string
          maxLength: 14
        website:
          type: string
          format: uri
          title: Site
          maxLength: 200
        student_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants
        president_names:
          type: string
          title: Noms du président
          maxLength: 256
        president_phone:
          type: string
          title: Numéro de téléphone du président
          maxLength: 32
        president_email:
          type: string
          format: email
          title: Adresse email du président
          maxLength: 256
        is_enabled:
          type: boolean
          title: Est active
        is_public:
          type: boolean
          title: Est publique
        is_site:
          type: boolean
          title: Est site
        amount_members_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre de membres autorisés
        can_submit_projects:
          type: boolean
          title: Peut soumettre des projets
        charter_status:
          allOf:
          - $ref: '#/components/schemas/CharterStatusEnum'
          title: Statut de la charte
        charter_date:
          type: string
          format: date
          nullable: true
          title: Date de la charte
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de création
        approval_date:
          type: string
          format: date
          nullable: true
          title: Date d'agrément
        last_goa_date:
          type: string
          format: date
          nullable: true
          title: Date de la dernière AGO
        cga_date:
          type: string
          format: date
          nullable: true
          title: Date de dernière AG constitutive
        social_networks: {}
      required:
      - activity_field
      - creation_date
      - email
      - id
      - institution
      - institution_component
      - name
      - path_logo
    AssociationAllDataUpdate:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 250
        acronym:
          type: string
          maxLength: 30
        social_object:
          type: string
        current_projects:
          type: string
        address:
          type: string
        zipcode:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 128
        country:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 32
        email:
          type: string
          maxLength: 256
        siret:
          type: string
          maxLength: 14
        website:
          type: string
          maxLength: 200
        president_names:
          type: string
          maxLength: 256
        president_phone:
          type: string
          maxLength: 32
        president_email:
          type: string
          maxLength: 256
        institution:
          type: integer
          nullable: true
        institution_component:
          type: integer
          nullable: true
        activity_field:
          type: integer
          nullable: true
        path_logo:
          type: string
          format: uri
          nullable: true
          title: Miniatures dynamiques pour le logo
        student_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants
        is_enabled:
          type: boolean
          title: Est active
        is_public:
          type: boolean
          title: Est publique
        is_site:
          type: boolean
          title: Est site
        amount_members_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre de membres autorisés
        can_submit_projects:
          type: boolean
          title: Peut soumettre des projets
        charter_status:
          allOf:
          - $ref: '#/components/schemas/CharterStatusEnum'
          title: Statut de la charte
        charter_date:
          type: string
          format: date
          nullable: true
          title: Date de la charte
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de création
        approval_date:
          type: string
          format: date
          nullable: true
          title: Date d'agrément
        last_goa_date:
          type: string
          format: date
          nullable: true
          title: Date de la dernière AGO
        cga_date:
          type: string
          format: date
          nullable: true
          title: Date de dernière AG constitutive
        social_networks: {}
      required:
      - creation_date
      - id
    AssociationMandatoryData:
      type: object
      description: Smaller serializer to return only the main informations of an association.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 256
        is_enabled:
          type: boolean
          title: Est active
        is_public:
          type: boolean
          title: Est publique
        is_site:
          type: boolean
          title: Est site
        institution:
          type: integer
          nullable: true
          title: Établissement
      required:
      - email
      - id
      - name
    AssociationMandatoryDataRequest:
      type: object
      description: Smaller serializer to return only the main informations of an association.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        acronym:
          type: string
          minLength: 1
          title: Acronyme
          maxLength: 30
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
          maxLength: 256
        is_enabled:
          type: boolean
          title: Est active
        is_public:
          type: boolean
          title: Est publique
        is_site:
          type: boolean
          title: Est site
        institution:
          type: integer
          nullable: true
          title: Établissement
      required:
      - email
      - name
    AssociationName:
      type: object
      description: Smaller serializer used in a simple name list of all associations.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        has_president:
          type: boolean
          description: Check if a president has been linked to an association.
          readOnly: true
        institution:
          type: integer
          nullable: true
          title: Établissement
      required:
      - has_president
      - id
      - name
    AssociationPartialData:
      type: object
      description: Smaller serializer to return only some of the informations of an
        association.
      properties:
        id:
          type: integer
          readOnly: true
        institution:
          type: integer
        institution_component:
          type: integer
        activity_field:
          type: integer
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 256
        is_enabled:
          type: boolean
          title: Est active
        is_public:
          type: boolean
          title: Est publique
        is_site:
          type: boolean
          title: Est site
        path_logo:
          type: object
          additionalProperties:
            type: string
          description: Return cached logo URL instead of calculated one which is slower.
          readOnly: true
        charter_status:
          allOf:
          - $ref: '#/components/schemas/CharterStatusEnum'
          title: Statut de la charte
        charter_date:
          type: string
          format: date
          nullable: true
          title: Date de la charte
      required:
      - activity_field
      - email
      - id
      - institution
      - institution_component
      - name
      - path_logo
    AssociationStatus:
      type: object
      description: Serializer for status field.
      properties:
        charter_status:
          allOf:
          - $ref: '#/components/schemas/CharterStatusEnum'
          title: Statut de la charte
    AssociationUser:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        association:
          type: integer
        is_president:
          type: boolean
          title: Dirige l'association
        can_be_president_from:
          type: string
          format: date
          nullable: true
          title: Peut diriger l'association de
        can_be_president_to:
          type: string
          format: date
          nullable: true
          title: Peut diriger l'association à
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_vice_president:
          type: boolean
          title: Est vice-président
        is_secretary:
          type: boolean
          title: Est secrétaire
        is_treasurer:
          type: boolean
          title: Est trésorier
      required:
      - association
      - id
      - user
    AssociationUserCreate:
      type: object
      description: Serializer for user-associations creation.
      properties:
        user:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
        association:
          type: integer
        is_president:
          type: boolean
          title: Dirige l'association
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_vice_president:
          type: boolean
          title: Est vice-président
        is_secretary:
          type: boolean
          title: Est secrétaire
        is_treasurer:
          type: boolean
          title: Est trésorier
      required:
      - association
      - user
    AssociationUserCreateRequest:
      type: object
      description: Serializer for user-associations creation.
      properties:
        user:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
        association:
          type: integer
        is_president:
          type: boolean
          title: Dirige l'association
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_vice_president:
          type: boolean
          title: Est vice-président
        is_secretary:
          type: boolean
          title: Est secrétaire
        is_treasurer:
          type: boolean
          title: Est trésorier
      required:
      - association
      - user
    AssociationUserUpdate:
      type: object
      description: Serializer for user-associations change.
      properties:
        is_president:
          type: boolean
          title: Dirige l'association
        can_be_president_from:
          type: string
          format: date
          nullable: true
          title: Peut diriger l'association de
        can_be_president_to:
          type: string
          format: date
          nullable: true
          title: Peut diriger l'association à
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_vice_president:
          type: boolean
          title: Est vice-président
        is_secretary:
          type: boolean
          title: Est secrétaire
        is_treasurer:
          type: boolean
          title: Est trésorier
    CAS:
      type: object
      description: Main serializer.
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        ticket:
          type: string
        service:
          type: string
          format: uri
      required:
      - service
      - ticket
    CASRequest:
      type: object
      description: Main serializer.
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
        ticket:
          type: string
          minLength: 1
        service:
          type: string
          format: uri
          minLength: 1
      required:
      - service
      - ticket
    Category:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
      required:
      - id
      - name
    CategoryRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
      required:
      - name
    CharterStatusEnum:
      enum:
      - CHARTER_DRAFT
      - CHARTER_REJECTED
      - CHARTER_PROCESSING
      - CHARTER_VALIDATED
      - CHARTER_EXPIRED
      type: string
      description: |-
        * `CHARTER_DRAFT` - Charte en Brouillon
        * `CHARTER_REJECTED` - Charte Rejetée
        * `CHARTER_PROCESSING` - Charte en Traitement
        * `CHARTER_VALIDATED` - Charte Validée
        * `CHARTER_EXPIRED` - Charte Expirée
    Commission:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        submission_date:
          type: string
          format: date
          title: Date de fin de soumission des projets
        commission_date:
          type: string
          format: date
          title: Date de commission
        is_open_to_projects:
          type: boolean
          title: Peut recevoir des projets
        name:
          type: string
          title: Nom
          maxLength: 250
      required:
      - commission_date
      - id
      - submission_date
    CommissionFund:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        commission:
          type: integer
        fund:
          type: integer
          title: Fonds
      required:
      - commission
      - fund
      - id
    CommissionFundRequest:
      type: object
      description: Main serializer.
      properties:
        commission:
          type: integer
        fund:
          type: integer
          title: Fonds
      required:
      - commission
      - fund
    CommissionRequest:
      type: object
      description: Main serializer.
      properties:
        submission_date:
          type: string
          format: date
          title: Date de fin de soumission des projets
        commission_date:
          type: string
          format: date
          title: Date de commission
        is_open_to_projects:
          type: boolean
          title: Peut recevoir des projets
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
      required:
      - commission_date
      - submission_date
    Content:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 128
        label:
          type: string
          maxLength: 128
        title:
          type: string
          nullable: true
          title: Titre
          maxLength: 512
        header:
          type: string
          nullable: true
          title: En-tête
        body:
          type: string
          title: Corps du message
        footer:
          type: string
          nullable: true
          title: Pied de page
        aside:
          type: string
          nullable: true
          title: Barre annexe
        is_editable:
          type: boolean
          title: Est modifiable
      required:
      - body
      - code
      - id
      - label
    ContentUpdate:
      type: object
      description: Serializer for fields that can be updated as manager.
      properties:
        header:
          type: string
        body:
          type: string
        footer:
          type: string
        aside:
          type: string
    CustomRegisterRequest:
      type: object
      description: Used for the user registration form (to parse the phone field).
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
          maxLength: 254
        first_name:
          type: string
          minLength: 1
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          title: Nom de famille
          maxLength: 150
        phone:
          type: string
          maxLength: 32
      required:
      - email
      - first_name
      - last_name
    Document:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        size:
          type: integer
          description: Return file size.
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
        description:
          type: string
        contact:
          type: string
          title: Adresse de contact
        is_multiple:
          type: boolean
          title: Est multiple
        is_required_in_process:
          type: boolean
          title: Est requis dans son processus
        days_before_expiration:
          type: string
          nullable: true
          title: Nombre de jours avant expiration du document
        expiration_day:
          type: string
          nullable: true
          title: Jour d'expiration du document au format %m-%d
          maxLength: 5
        path_template:
          type: string
          format: uri
          nullable: true
          title: Template de fichier d'exemple
        mime_types:
          type: array
          items:
            type: string
            maxLength: 128
        process_type:
          allOf:
          - $ref: '#/components/schemas/ProcessTypeEnum'
          title: Statut du Document
        edition_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de dernière mise à jour
        institution:
          type: integer
          nullable: true
          title: Établissement
        fund:
          type: integer
          nullable: true
          title: Fonds
      required:
      - edition_date
      - id
      - size
    DocumentCreateRequest:
      type: object
      description: Serializer for document create.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        description:
          type: string
          minLength: 1
        path_template:
          type: string
          format: binary
          nullable: true
          title: Template de fichier d'exemple
        institution:
          type: integer
          nullable: true
          title: Établissement
        fund:
          type: integer
          nullable: true
          title: Fonds
    DocumentUploadCreate:
      type: object
      description: Main serializer not overriding path_file.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        document:
          type: integer
        user:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
        association:
          type: integer
          nullable: true
        project:
          type: integer
          nullable: true
          title: Projet
        validated_date:
          type: string
          format: date
          nullable: true
          title: Date de validation
        path_file:
          type: string
          format: uri
          title: Fichier envoyé
      required:
      - document
      - id
      - path_file
    DocumentUploadCreateRequest:
      type: object
      description: Main serializer not overriding path_file.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        document:
          type: integer
        user:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
        association:
          type: integer
          nullable: true
        project:
          type: integer
          nullable: true
          title: Projet
        validated_date:
          type: string
          format: date
          nullable: true
          title: Date de validation
        path_file:
          type: string
          format: binary
          title: Fichier envoyé
      required:
      - document
      - path_file
    DocumentUploadFile:
      type: object
      description: Retrieve only the file itself.
      properties:
        path_file:
          type: string
          format: uri
          title: Fichier envoyé
        name:
          type: string
          title: Nom
          maxLength: 250
      required:
      - path_file
    DocumentUploadList:
      type: object
      description: Main serializer without file size.
      properties:
        id:
          type: integer
          readOnly: true
        path_file:
          type: string
          description: Return a link to DocumentUploadFileRetrieve view.
          readOnly: true
        calculated_expiration_date:
          type: string
          description: Return real expiration date based on expiration_day or days_before_expiration.
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        upload_date:
          type: string
          format: date-time
          readOnly: true
          title: Date d'envoi
        validated_date:
          type: string
          format: date
          nullable: true
          title: Date de validation
        comment:
          type: string
          nullable: true
          title: Commentaire
        document:
          type: integer
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        project:
          type: integer
          nullable: true
          title: Projet
      required:
      - calculated_expiration_date
      - document
      - id
      - path_file
      - upload_date
    DocumentUploadRetrieve:
      type: object
      description: Main serializer with file size.
      properties:
        id:
          type: integer
          readOnly: true
        path_file:
          type: string
          description: Return a link to DocumentUploadFileRetrieve view.
          readOnly: true
        size:
          type: integer
          description: Return file size.
          readOnly: true
        calculated_expiration_date:
          type: string
          description: Return real expiration date based on expiration_day or days_before_expiration.
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        upload_date:
          type: string
          format: date-time
          readOnly: true
          title: Date d'envoi
        validated_date:
          type: string
          format: date
          nullable: true
          title: Date de validation
        comment:
          type: string
          nullable: true
          title: Commentaire
        document:
          type: integer
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        project:
          type: integer
          nullable: true
          title: Projet
      required:
      - calculated_expiration_date
      - document
      - id
      - path_file
      - size
      - upload_date
    DocumentUploadUpdate:
      type: object
      description: Serializer to validate a document.
      properties:
        validated_date:
          type: string
          format: date
          nullable: true
          title: Date de validation
        comment:
          type: string
          nullable: true
          title: Commentaire
    ExternalUser:
      type: object
      description: External user serializer.
      properties:
        first_name:
          type: string
        last_name:
          type: string
        mail:
          type: string
        username:
          type: string
    Fund:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
        is_site:
          type: boolean
          title: Est site
        decision_attribution_template_path:
          type: string
          nullable: true
          title: Chemin du template de décision d'attribution
          maxLength: 250
        attribution_template_path:
          type: string
          nullable: true
          title: Chemin du template d'attribution
          maxLength: 250
        rejection_template_path:
          type: string
          nullable: true
          title: Chemin du template de rejet
          maxLength: 250
        postpone_template_path:
          type: string
          nullable: true
          title: Chemin du template de report
          maxLength: 250
        institution:
          type: integer
          title: Établissement
      required:
      - acronym
      - id
      - institution
      - name
    Group:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 150
        permissions:
          type: object
          additionalProperties: {}
          description: Return permissions links.
          readOnly: true
        is_public:
          type: boolean
          description: Is true if the group can be selected on normal registration.
          readOnly: true
      required:
      - id
      - is_public
      - name
      - permissions
    GroupInstitutionFundUser:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        group:
          type: integer
        institution:
          type: integer
          nullable: true
        fund:
          type: integer
          nullable: true
      required:
      - group
      - id
      - user
    GroupInstitutionFundUserCreate:
      type: object
      description: Serializer for user-groups creation (with username instead of id).
      properties:
        user:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
        group:
          type: integer
        institution:
          type: integer
          nullable: true
        fund:
          type: integer
          nullable: true
      required:
      - group
      - user
    GroupInstitutionFundUserCreateRequest:
      type: object
      description: Serializer for user-groups creation (with username instead of id).
      properties:
        user:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
        group:
          type: integer
        institution:
          type: integer
          nullable: true
        fund:
          type: integer
          nullable: true
      required:
      - group
      - user
    Institution:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        acronym:
          type: string
          title: Acronyme
          maxLength: 30
      required:
      - acronym
      - id
      - name
    InstitutionComponent:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        institution:
          type: integer
          nullable: true
          title: Établissement
      required:
      - id
      - name
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access:
          type: string
        refresh:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - access
      - refresh
      - user
    LoginRequest:
      type: object
      description: Overrided LoginSerializer to log the action in history.
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
      required:
      - password
    Logo:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        path_logo:
          type: string
          description: Return cached logo URL instead of calculated one which is slower.
          readOnly: true
        acronym:
          type: string
          title: Acronyme
        title:
          type: string
          title: Alt du logo
        url:
          type: string
          title: URL du site
        row:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Ligne où est placé le logo dans la disposition
        column:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Colonne où est placé le logo dans la disposition
        visible:
          type: boolean
          title: Est visible
      required:
      - id
      - path_logo
    PasswordChangeRequest:
      type: object
      description: Overrided PasswordChangeSerializer to prevent CAS users to change
        their passwords.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordResetConfirmRequest:
      type: object
      description: Overrided PasswordResetConfirmSerializer to send a email when password
        is reset.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PasswordResetRequest:
      type: object
      description: Overrided PasswordResetSerializer to prevent CAS users to reset
        their passwords.
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedAssociationAllDataUpdateRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          maxLength: 250
        acronym:
          type: string
          maxLength: 30
        social_object:
          type: string
        current_projects:
          type: string
        address:
          type: string
        zipcode:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 128
        country:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 32
        email:
          type: string
          maxLength: 256
        siret:
          type: string
          maxLength: 14
        website:
          type: string
          maxLength: 200
        president_names:
          type: string
          maxLength: 256
        president_phone:
          type: string
          maxLength: 32
        president_email:
          type: string
          maxLength: 256
        institution:
          type: integer
          nullable: true
        institution_component:
          type: integer
          nullable: true
        activity_field:
          type: integer
          nullable: true
        path_logo:
          type: string
          format: binary
          nullable: true
          title: Miniatures dynamiques pour le logo
        student_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants
        is_enabled:
          type: boolean
          title: Est active
        is_public:
          type: boolean
          title: Est publique
        is_site:
          type: boolean
          title: Est site
        amount_members_allowed:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre de membres autorisés
        can_submit_projects:
          type: boolean
          title: Peut soumettre des projets
        charter_status:
          allOf:
          - $ref: '#/components/schemas/CharterStatusEnum'
          title: Statut de la charte
        charter_date:
          type: string
          format: date
          nullable: true
          title: Date de la charte
        approval_date:
          type: string
          format: date
          nullable: true
          title: Date d'agrément
        last_goa_date:
          type: string
          format: date
          nullable: true
          title: Date de la dernière AGO
        cga_date:
          type: string
          format: date
          nullable: true
          title: Date de dernière AG constitutive
        social_networks: {}
    PatchedAssociationStatusRequest:
      type: object
      description: Serializer for status field.
      properties:
        charter_status:
          allOf:
          - $ref: '#/components/schemas/CharterStatusEnum'
          title: Statut de la charte
    PatchedAssociationUserUpdateRequest:
      type: object
      description: Serializer for user-associations change.
      properties:
        is_president:
          type: boolean
          title: Dirige l'association
        can_be_president_from:
          type: string
          format: date
          nullable: true
          title: Peut diriger l'association de
        can_be_president_to:
          type: string
          format: date
          nullable: true
          title: Peut diriger l'association à
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_vice_president:
          type: boolean
          title: Est vice-président
        is_secretary:
          type: boolean
          title: Est secrétaire
        is_treasurer:
          type: boolean
          title: Est trésorier
    PatchedCommissionUpdateRequest:
      type: object
      description: Update serializer.
      properties:
        submission_date:
          type: string
          format: date
          title: Date de fin de soumission des projets
        commission_date:
          type: string
          format: date
          title: Date de commission
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        is_open_to_projects:
          type: boolean
          title: Peut recevoir des projets
    PatchedContentUpdateRequest:
      type: object
      description: Serializer for fields that can be updated as manager.
      properties:
        header:
          type: string
        body:
          type: string
        footer:
          type: string
        aside:
          type: string
    PatchedDocumentUpdateRequest:
      type: object
      description: Serializer for document update.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        description:
          type: string
          minLength: 1
        path_template:
          type: string
          format: binary
          nullable: true
          title: Template de fichier d'exemple
    PatchedDocumentUploadUpdateRequest:
      type: object
      description: Serializer to validate a document.
      properties:
        validated_date:
          type: string
          format: date
          nullable: true
          title: Date de validation
        comment:
          type: string
          nullable: true
          minLength: 1
          title: Commentaire
    PatchedProjectCommentUpdateRequest:
      type: object
      description: Fields that can be updated.
      properties:
        text:
          type: string
          minLength: 1
          title: Texte
        is_visible:
          type: boolean
          title: Est visible
    PatchedProjectCommissionFundDataRequest:
      type: object
      description: Fields that can be updated by project's bearer.
      properties:
        is_first_edition:
          type: boolean
          title: Est la première édition
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé à l'édition précédente
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant obtenu à l'édition précédente
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Montant obtenu
        is_validated_by_admin:
          type: boolean
          nullable: true
          title: Est validé par l'équipe d'administration
        new_commission_fund_id:
          type: integer
    PatchedProjectRequest:
      type: object
      description: Main serializer.
      properties:
        name:
          type: string
          minLength: 1
          title: Nom
          maxLength: 250
        manual_identifier:
          type: string
          nullable: true
          minLength: 1
          title: Identifiant manuel
          maxLength: 8
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début prévue
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin prévue
        planned_location:
          type: string
          minLength: 1
          title: Lieu prévu
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        association_user:
          type: integer
          nullable: true
          title: Membre d'association
        partner_association:
          type: string
          minLength: 1
          title: Association co-porteuse
        budget_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Budget de l'édition précédente
        target_audience:
          type: string
          minLength: 1
          title: Public visé
        amount_students_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants dans le public visé
        amount_all_audience:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Nombre de personnes au total dans le public visé
        ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Quantité d'argent demandée par personne
        student_ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Quantité d'argent demandée par étudiant
        individual_cost:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Quantité d'argent nécessaire par personne
        goals:
          type: string
          minLength: 1
          title: Objectifs
        summary:
          type: string
          minLength: 1
          title: Résumé
        planned_activities:
          type: string
          minLength: 1
          title: Activités prévues
        prevention_safety:
          type: string
          minLength: 1
          title: Actions de prévention et de sécurité prévues
        marketing_campaign:
          type: string
          minLength: 1
          title: Campagne de communication
        sustainable_development:
          type: string
          minLength: 1
          title: Actions en rapport avec le DDRS (Développement Durable et Responsabilité
            Sociétale)
        project_status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatusEnum'
          title: Statut du Projet
        processing_date:
          type: string
          format: date-time
          nullable: true
          title: Date de dépôt de projet
    PatchedProjectReviewUpdateRequest:
      type: object
      description: Main review serializer for update.
      properties:
        association_user:
          type: integer
          nullable: true
          title: Membre d'association
        outcome:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Dépenses
        income:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Recettes
        real_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début réelle
        real_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin réelle
        real_location:
          type: string
          minLength: 1
          title: Lieu réel
        review:
          type: string
          minLength: 1
          title: Bilan (nombre d'étudiants, partenariats, ...)
        impact_students:
          type: string
          minLength: 1
          title: Impact sur les étudiants
        description:
          type: string
          minLength: 1
          title: Description (activités réalisées, changements par rapport au planning,
            ...)
        difficulties:
          type: string
          minLength: 1
          title: Difficultés
        improvements:
          type: string
          minLength: 1
          title: Améliorations
    PatchedProjectStatusRequest:
      type: object
      description: Serializer for status field.
      properties:
        project_status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatusEnum'
          title: Statut du Projet
        processing_date:
          type: string
          format: date-time
          nullable: true
          title: Date de dépôt de projet
    PatchedUserRequest:
      type: object
      description: Main serializer.
      properties:
        username:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          title: Nom de famille
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
          maxLength: 254
        address:
          type: string
        zipcode:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 128
        country:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 32
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_student:
          type: boolean
          title: Est étudiant
        can_submit_projects:
          type: boolean
          title: Peut soumettre des projets
    PatchedUserUpdateRequest:
      type: object
      description: Serializer to patch the user.
      properties:
        username:
          type: string
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
        address:
          type: string
        zipcode:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 128
        country:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 32
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_student:
          type: boolean
          title: Est étudiant
        can_submit_projects:
          type: boolean
          title: Peut soumettre des projets
    ProcessTypeEnum:
      enum:
      - CHARTER_ASSOCIATION
      - CHARTER_PROJECT_FUND
      - DOCUMENT_ASSOCIATION
      - DOCUMENT_USER
      - DOCUMENT_PROJECT
      - DOCUMENT_PROJECT_REVIEW
      - NO_PROCESS
      type: string
      description: |-
        * `CHARTER_ASSOCIATION` - Charte pour Association
        * `CHARTER_PROJECT_FUND` - Charte pour Demande de Subvention
        * `DOCUMENT_ASSOCIATION` - Document pour Association
        * `DOCUMENT_USER` - Document pour Utilisateur
        * `DOCUMENT_PROJECT` - Document pour Demande de Subvention
        * `DOCUMENT_PROJECT_REVIEW` - Document pour Bilan de Subvention
        * `NO_PROCESS` - Document non lié à un processus
    Project:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        manual_identifier:
          type: string
          nullable: true
          title: Identifiant manuel
          maxLength: 8
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début prévue
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin prévue
        planned_location:
          type: string
          title: Lieu prévu
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        association_user:
          type: integer
          nullable: true
          title: Membre d'association
        partner_association:
          type: string
          title: Association co-porteuse
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        commissions:
          type: array
          items:
            $ref: '#/components/schemas/Commission'
          readOnly: true
        budget_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Budget de l'édition précédente
        target_audience:
          type: string
          title: Public visé
        amount_students_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants dans le public visé
        amount_all_audience:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Nombre de personnes au total dans le public visé
        ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Quantité d'argent demandée par personne
        student_ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Quantité d'argent demandée par étudiant
        individual_cost:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Quantité d'argent nécessaire par personne
        goals:
          type: string
          title: Objectifs
        summary:
          type: string
          title: Résumé
        planned_activities:
          type: string
          title: Activités prévues
        prevention_safety:
          type: string
          title: Actions de prévention et de sécurité prévues
        marketing_campaign:
          type: string
          title: Campagne de communication
        sustainable_development:
          type: string
          title: Actions en rapport avec le DDRS (Développement Durable et Responsabilité
            Sociétale)
        project_status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatusEnum'
          title: Statut du Projet
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de création
        edition_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de dernière mise à jour
        processing_date:
          type: string
          format: date-time
          nullable: true
          title: Date de dépôt de projet
      required:
      - categories
      - commissions
      - creation_date
      - edition_date
      - id
      - name
    ProjectCategory:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        category:
          type: integer
      required:
      - category
      - id
      - project
    ProjectCategoryRequest:
      type: object
      description: Main serializer.
      properties:
        project:
          type: integer
        category:
          type: integer
      required:
      - category
      - project
    ProjectComment:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        user:
          $ref: '#/components/schemas/UserName'
        text:
          type: string
          title: Texte
        is_visible:
          type: boolean
          title: Est visible
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de création
        edition_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de dernière mise à jour
      required:
      - creation_date
      - edition_date
      - id
      - project
      - text
      - user
    ProjectCommentDataRequest:
      type: object
      description: Fields that can be created.
      properties:
        project:
          type: integer
          title: Projet
        is_visible:
          type: boolean
          title: Est visible
        text:
          type: string
          minLength: 1
          title: Texte
        user:
          type: integer
      required:
      - project
      - text
      - user
    ProjectCommissionFund:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        commission_fund:
          type: integer
        is_first_edition:
          type: boolean
          title: Est la première édition
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé à l'édition précédente
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant obtenu à l'édition précédente
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Montant obtenu
        is_validated_by_admin:
          type: boolean
          nullable: true
          title: Est validé par l'équipe d'administration
      required:
      - commission_fund
      - id
      - project
    ProjectCommissionFundData:
      type: object
      description: Fields that can be updated by project's bearer.
      properties:
        is_first_edition:
          type: boolean
          title: Est la première édition
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé à l'édition précédente
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant obtenu à l'édition précédente
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Montant obtenu
        is_validated_by_admin:
          type: boolean
          nullable: true
          title: Est validé par l'équipe d'administration
        commission_fund_id:
          type: integer
          title: Fonds lié à une Commission
          readOnly: true
        new_commission_fund_id:
          type: integer
        project_id:
          type: integer
          title: Projet
          readOnly: true
      required:
      - commission_fund_id
      - project_id
    ProjectCommissionFundRequest:
      type: object
      description: Main serializer.
      properties:
        project:
          type: integer
        commission_fund:
          type: integer
        is_first_edition:
          type: boolean
          title: Est la première édition
        amount_asked_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé à l'édition précédente
        amount_earned_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant obtenu à l'édition précédente
        amount_asked:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Montant demandé
        amount_earned:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Montant obtenu
        is_validated_by_admin:
          type: boolean
          nullable: true
          title: Est validé par l'équipe d'administration
      required:
      - commission_fund
      - project
    ProjectPartialData:
      type: object
      description: Serializer for project list.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        manual_identifier:
          type: string
          nullable: true
          title: Identifiant manuel
          maxLength: 8
        association:
          type: integer
          nullable: true
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association_user:
          type: integer
          nullable: true
          title: Membre d'association
        commission:
          allOf:
          - $ref: '#/components/schemas/Commission'
          readOnly: true
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début prévue
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin prévue
        edition_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de dernière mise à jour
        project_status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatusEnum'
          title: Statut du Projet
        budget_file:
          type: string
          description: Return a link to DocumentUploadFileRetrieve view for BUDGET_PREVISIONNEL.
          readOnly: true
      required:
      - budget_file
      - commission
      - edition_date
      - id
      - name
    ProjectReview:
      type: object
      description: Main review serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom
          maxLength: 250
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début prévue
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin prévue
        planned_location:
          type: string
          title: Lieu prévu
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        association_user:
          type: integer
          nullable: true
          title: Membre d'association
        commissions:
          type: array
          items:
            $ref: '#/components/schemas/Commission'
          readOnly: true
        outcome:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Dépenses
        income:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Recettes
        real_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début réelle
        real_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin réelle
        real_location:
          type: string
          title: Lieu réel
        review:
          type: string
          title: Bilan (nombre d'étudiants, partenariats, ...)
        impact_students:
          type: string
          title: Impact sur les étudiants
        description:
          type: string
          title: Description (activités réalisées, changements par rapport au planning,
            ...)
        difficulties:
          type: string
          title: Difficultés
        improvements:
          type: string
          title: Améliorations
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de création
        edition_date:
          type: string
          format: date-time
          readOnly: true
          title: Date de dernière mise à jour
      required:
      - commissions
      - creation_date
      - edition_date
      - id
      - name
    ProjectReviewUpdate:
      type: object
      description: Main review serializer for update.
      properties:
        association_user:
          type: integer
          nullable: true
          title: Membre d'association
        commissions:
          type: array
          items:
            $ref: '#/components/schemas/Commission'
          readOnly: true
        outcome:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Dépenses
        income:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Recettes
        real_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début réelle
        real_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin réelle
        real_location:
          type: string
          title: Lieu réel
        review:
          type: string
          title: Bilan (nombre d'étudiants, partenariats, ...)
        impact_students:
          type: string
          title: Impact sur les étudiants
        description:
          type: string
          title: Description (activités réalisées, changements par rapport au planning,
            ...)
        difficulties:
          type: string
          title: Difficultés
        improvements:
          type: string
          title: Améliorations
      required:
      - commissions
    ProjectStatus:
      type: object
      description: Serializer for status field.
      properties:
        project_status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatusEnum'
          title: Statut du Projet
        processing_date:
          type: string
          format: date-time
          nullable: true
          title: Date de dépôt de projet
    ProjectStatusEnum:
      enum:
      - PROJECT_DRAFT
      - PROJECT_DRAFT_PROCESSED
      - PROJECT_PROCESSING
      - PROJECT_REJECTED
      - PROJECT_VALIDATED
      - PROJECT_REVIEW_DRAFT
      - PROJECT_REVIEW_PROCESSING
      - PROJECT_REVIEW_VALIDATED
      - PROJECT_CANCELED
      type: string
      description: |-
        * `PROJECT_DRAFT` - Projet en Brouillon
        * `PROJECT_DRAFT_PROCESSED` - Projet en Brouillon mais traité
        * `PROJECT_PROCESSING` - Projet en Traitement
        * `PROJECT_REJECTED` - Projet Rejeté
        * `PROJECT_VALIDATED` - Projet Validé
        * `PROJECT_REVIEW_DRAFT` - Bilan de Projet en Brouillon
        * `PROJECT_REVIEW_PROCESSING` - Bilan de Projet en Traitement
        * `PROJECT_REVIEW_VALIDATED` - Bilan de Projet validé
        * `PROJECT_CANCELED` - Projet Annulé
    ProjectUpdateRequest:
      type: object
      description: Main serializer without project_status.
      properties:
        name:
          type: string
          maxLength: 250
        planned_start_date:
          type: string
          format: date-time
          nullable: true
          title: Date de début prévue
        planned_end_date:
          type: string
          format: date-time
          nullable: true
          title: Date de fin prévue
        planned_location:
          type: string
          minLength: 1
          title: Lieu prévu
        user:
          type: integer
          nullable: true
          title: Utilisateur
        association:
          type: integer
          nullable: true
        association_user:
          type: integer
          nullable: true
          title: Membre d'association
        partner_association:
          type: string
          minLength: 1
          title: Association co-porteuse
        budget_previous_edition:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Budget de l'édition précédente
        target_audience:
          type: string
          minLength: 1
          title: Public visé
        amount_students_audience:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Nombre d'étudiants dans le public visé
        amount_all_audience:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Nombre de personnes au total dans le public visé
        ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Quantité d'argent demandée par personne
        student_ticket_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Quantité d'argent demandée par étudiant
        individual_cost:
          type: integer
          maximum: 2147483647
          minimum: 1
          title: Quantité d'argent nécessaire par personne
        goals:
          type: string
          minLength: 1
          title: Objectifs
        summary:
          type: string
          minLength: 1
          title: Résumé
        planned_activities:
          type: string
          minLength: 1
          title: Activités prévues
        prevention_safety:
          type: string
          minLength: 1
          title: Actions de prévention et de sécurité prévues
        marketing_campaign:
          type: string
          minLength: 1
          title: Campagne de communication
        sustainable_development:
          type: string
          minLength: 1
          title: Actions en rapport avec le DDRS (Développement Durable et Responsabilité
            Sociétale)
    ResendEmailVerificationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    User:
      type: object
      description: Main serializer.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom de famille
          maxLength: 150
        email:
          type: string
          format: email
          title: Courriel
          maxLength: 254
        address:
          type: string
        zipcode:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 128
        country:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 32
        is_cas:
          type: boolean
          description: Calculate field "is_cas" (True if user registered through CAS).
          readOnly: true
        has_validated_email:
          type: boolean
          description: Calculate field "has_validated_email" (True if user finished
            registration).
          readOnly: true
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_student:
          type: boolean
          title: Est étudiant
        can_submit_projects:
          type: boolean
          title: Peut soumettre des projets
        associations:
          type: array
          items:
            $ref: '#/components/schemas/AssociationMandatoryData'
          readOnly: true
        groups:
          type: object
          additionalProperties: {}
          description: Return groups-institutions-users links.
          readOnly: true
        permissions:
          type: object
          additionalProperties: {}
          description: Return permissions linked to the user.
          readOnly: true
      required:
      - associations
      - email
      - first_name
      - groups
      - has_validated_email
      - id
      - is_cas
      - last_name
      - permissions
      - username
    UserName:
      type: object
      description: Used to get data from another student in the same associations.
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom de famille
          maxLength: 150
      required:
      - first_name
      - id
      - last_name
    UserPartialDataRequest:
      type: object
      description: Used to get data from another student in the same associations.
      properties:
        username:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          title: Nom de famille
          maxLength: 150
        phone:
          type: string
          nullable: true
          minLength: 1
          title: Téléphone
          maxLength: 32
        email:
          type: string
          format: email
          minLength: 1
          title: Courriel
          maxLength: 254
        is_cas:
          type: boolean
          default: false
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
      required:
      - email
      - first_name
      - last_name
      - username
    UserUpdate:
      type: object
      description: Serializer to patch the user.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
        address:
          type: string
        zipcode:
          type: string
          maxLength: 32
        city:
          type: string
          maxLength: 128
        country:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 32
        is_cas:
          type: boolean
          description: Calculate field "is_cas" (True if user registered through CAS).
          readOnly: true
        has_validated_email:
          type: boolean
          description: Calculate field "has_validated_email" (True if user finished
            registration).
          readOnly: true
        is_validated_by_admin:
          type: boolean
          title: Est validé par l'équipe d'administration
        is_student:
          type: boolean
          title: Est étudiant
        can_submit_projects:
          type: boolean
          title: Peut soumettre des projets
        associations:
          type: array
          items:
            $ref: '#/components/schemas/AssociationMandatoryData'
          readOnly: true
        groups:
          type: object
          additionalProperties: {}
          description: Return groups-institutions-users links.
          readOnly: true
        permissions:
          type: object
          additionalProperties: {}
          description: Return permissions linked to the user.
          readOnly: true
      required:
      - associations
      - groups
      - has_validated_email
      - id
      - is_cas
      - permissions
    VerifyEmailRequest:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - key
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
