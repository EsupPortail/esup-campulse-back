stages:
  - sonarqube-check
  - test
  - deploy
  - build
  - scan
  - release

services:
  - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/postgres
    alias: postgres

variables:
  POSTGRES_DB: plana_test
  POSTGRES_USER: plana
  POSTGRES_PASSWORD: plana
  DJANGO_SETTINGS_MODULE: plana.settings.unittest
  PYTHON_VERSION: "3.9"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY/dnum/campulse-backend:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY/dnum/campulse-backend:latest
  EXTRA_ARGS: ""

before_script:
  - apt-get update && apt-get install -y age

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  tags:
    - cluster

  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  
  script: 
    - sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}"
  allow_failure: true
  # needs:
  #   - job: unittest
  #     artifacts: true
  rules:
    # - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    # - if: $CI_COMMIT_BRANCH == 'master'
    # - if: $CI_COMMIT_BRANCH == 'main'
    # - if: $CI_COMMIT_BRANCH == 'develop'
    - if: $CI_COMMIT_BRANCH == 'cleanup'

unittest:
  stage: test
  tags:
    - python3.9
  script:
    - apt-get update && apt-get install -y libpango-1.0-0 libpangoft2-1.0-0
    - pip3 install -r requirements/dev.txt
    - python manage.py generate_jwt_keys
    - touch keys/jwt-public-key.pem
    - touch keys/jwt-private-key.pem
    - python manage.py generate_age_keys
    - touch keys/age-public-key.key
    - touch keys/age-private-key.key
    - tox
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
#  rules:
#    - when: never # TODO remove this line when tests with Docker are finished

include:
  - project: docker/template
    file: python-licenses.gitlab-ci.yml
  
pages:
  stage: deploy
  image: registry.gitlab.com/pages/hugo:latest
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd docs
    - hugo
    - cp -r public ..
  tags:
    - cluster
  artifacts:
    paths:
    - public
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop"'
    - if: '$CI_COMMIT_REF_NAME == "main"'

.build-image:
  image:
    # gcr.io/kaniko-project/executor:v1.7.0-debug
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - echo "${CI_PROJECT_DIR} ${CI_PROJECT_DIR_PATH} ${CI_REGISTRY} ${CI_REGISTRY_USER} ${DESTINATION} ${EXTRA_ARGS}"
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}${CI_PROJECT_DIR_PATH}/Dockerfile"
      --destination "${DESTINATION}" ${EXTRA_ARGS}
      --registry-mirror quay.apps.mgmt.paas.unistra.fr/dnum
  tags:
    - cluster
    - kubernetes

b:docker:
  extends: .build-image
  stage: build
  variables:
    DESTINATION: $CONTAINER_TEST_IMAGE

r:docker:
  extends: .build-image
  stage: release
  variables:
    DESTINATION: $CONTAINER_RELEASE_IMAGE
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
  # only:
  #   - master
  #   - main
